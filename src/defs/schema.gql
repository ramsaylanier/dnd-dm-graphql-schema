scalar ObjectScalarType

interface Character{
  name: String!
  level: Int!
  weapons: [Weapon]
  attacks: [Attack]
  armor: Armor
  equipment: [Item]
  initiative: Int!
  hitpointDice: String!
  hitpoints: Int!
  attributes: Attributes
  speed: Int!
}

interface Item{
  name: String!
  type: itemType
  cost: String!
  weight: Int!
  description: String!
  tags: [String]
}

type Monster{
  name: String!
  meta: String
  armorClass: Int
  armor: Armor
  hitpointDice: String!
  hitpoints: Int!
  speed: String!
  stats: StatBlock!
  savingThrows: String
  skills: String
  damageImmunities: String
  senses: String
  languages: String
  challenge: Float
  challengeXp: Int
  traits: String
  actions: String
  environments: [String]
}

type Npc implements Character{
  name: String!
  level: Int!
  weapons: [Weapon]
  attacks: [Attack]
  armor: Armor
  equipment: [Item]
  initiative: Int!
  hitpointDice: String!
  hitpoints: Int!
  attributes: Attributes
  speed: Int!
  occupation: String!
  hometown: String!
}

type Attack{
  name: String!
  item: Item
  hitDice: String!
  damageDice: String!
}

type StatBlock{
  str: Int!
  strMod: String!
  dex: Int!
  dexMod: String!
  con: Int!
  conMod: String!
  int: Int!
  intMod: String!
  wis: Int!
  wisMod: String!
  cha: Int!
  chaMod: String!
}

type Attributes{
  hitpoints: Int!
  hitpointDice: String!
}

type Weapon implements Item{
  name: String!
  type: itemType
  cost: String!
  description: String!
  damageDice: String!
  damageType: damageType
  weight: Int!
  range: String
  handedness: handedness
  tags: [String]
}

type Armor implements Item{
  name: String!
  type: itemType
  cost: String!
  description: String!
  weight: Int!
  armorClass: Int!
  resistance: damageType
  tags: [String]
}

type Encounter{
  xpThreshold: Int!
  monsters: [Monster]!
}

type Conversion{
  CP: Float!
  SP: Float!
  EC: Float!
  GP: Float!
  PP: Float!
}

enum itemType{
  ADVENTURINGGEAR
  AMMUNITION
  AXE
  HEAVYARMOR
  LIGHTARMOR
  MEDIUMARMOR
  MELEEWEAPON
  MUNDANE
  RANGEDWEAPON
  RING
  SCROLL
  SHIELD
  SWORD
  WAND
  WONDROUS
}

enum damageType{
  ACID
  BLUDGEONING
  COLD
  FIRE
  FORCE
  LIGHTNING
  NECTROTIC
  PIERCING
  POISONG
  PSYCHIC
  RADIANT
  SLASHING
  THUNDER
}

enum environment{
  ALL
  PLAINS
  FOREST
  HILLS
  MOUNTAINS
  MARSH
  DESERT
  UNDERGROUND
  AQUATIC
  UNDERDARK
  ABYSS
  COASTAL
}

enum handedness{
  ONEHANDED
  TWOHANDED
  VERSATILE
}

enum encounterDifficulty{
  EASY
  MEDIUM
  HARD
  DEADLY
}

enum currency{
  CP
  SP
  EC
  GD
  PP
}

enum OperationType {
  EQL
  GT
  GTE
  IN
  LT
  LTE
  NE
  NIN
}

type Query{
<<<<<<< HEAD
  encounter(playerLevels: [Int!], difficulty: encounterDifficulty!, environment: environment, maxMonsters: Int ): Encounter
=======
  searchMonsters(filter: ObjectScalarType, sort: ObjectScalarType): [Monster]
  encounter(playerLevels: [Int!], difficulty: encounterDifficulty!): Encounter
>>>>>>> update-monster-schema
  exchangeRate(amount: Int!, currency: currency!): Conversion
}
